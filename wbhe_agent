#!/bin/bash

WBHE_LOG_FILE=/var/log/bash_history.log
WBHE_AGENT_PATH=/usr/local/bin/wbhe_agent
INOTIFYWAIT_PATH=$(type -p inotifywait)
DOWNLOAD_URL=https://raw.githubusercontent.com/jaekwon-park/web_bash_history_extend/master/wbhe_agent
INOTIFY_DOWNLOAD_URL=http://cloud.github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz
WBHE_SERVER_URL=http://wbhe.ddb.infra.farm/api/v1/log
X_API_KEY="48ocss0844swwgos8gcggc40wgsggo848wkoow4c1"
MESSAGE_REPEAT_FILTER="message repeated"
CHANGED_FILE_FILTER="Changed the file"

PARSED_OPTION=$(getopt -n "$0" -o u:k: --long "url:,keyset:" -- "$@")
if [ $? -ne 0 ]; then
  echo "invaild option "
  exit 1
fi
eval set -- "$PARSED_OPTION"
echo $0" Argument Reparsed [ "$PARSED_OPTION " ]"

while true; do
  case $1 in
  -u | --url)
    echo $1" was triggered, Parameter: "$2 >&2
    shift 2
    ;;
  -k | --keyset)
    echo $1" was triggered, Parameter: "$2 >&2
    shift 2
    ;;
  --)
    shift
    break
    ;;
  esac
done

COMMAND=$1
shift

function exception_check() {
  if [ $? -eq 0 ]; then
    if [ -z $1 ]; then
      echo "done"
    fi
  else
    echo "above task return code "$?
    echo "something wrong"
    exit 1
  fi
}

function update() {
  if [ $(ps -ef | grep -v grep | grep "wbhe_agent run" | wc -l) -eq 0 ]; then
    curl -w ' [:: %{size_download} byte has been downloaded ::]\n' -L -# $DOWNLOAD_URL?$(date +%s) -o /tmp/wbhe_agent
    exception_check quiet
    if [ "$(md5sum /tmp/wbhe_agent | awk '{print $1}')" != "$(md5sum $WBHE_AGENT_PATH | awk '{print $1}')" ]; then
      chmod +x /tmp/wbhe_agent
      exception_check quiet
      mv -f /tmp/wbhe_agent $WBHE_AGENT_PATH
      exception_check quiet
      echo "update done"
    else
      rm -rf /tmp/wbhe_agent
      echo "wbhe_agent already up to date"
    fi
  else
    echo "wbhe_agent runnig"
  fi
}

function stop() {
  if [ $(ps -ef | grep -v grep | grep wbhe_agent | wc -l) -ne 0 ]; then
    PID=$(ps -ef | grep -v grep | grep wbhe_agent | awk '{print $2}')
    echo "wbhe_agent running pid "$PID
    echo "Try stop wbhe_agent"
    kill -9 $PID
    exception_check
  else
    echo "can't find wbhe_agent process"
    exit 0
  fi
}
function check_tools() {
  # inotify-tools installation check and install
  if [[ -z $INOTIFYWAIT_PATH ]]; then
    echo "need to inotify-tools package"
    echo "install inotify-tools"
    RPM_PATH=$(type -p rpm)
    DPKG_PATH=$(type -p dpkg)
    if [ -e "$RPM_PATH" ]; then
      curl -w ' [:: %{size_download} byte has been downloaded ::]\n' -L -# $INOTIFY_DOWNLOAD_URL?$(date +%s) -o /tmp/inotify-tools-3.14.tar.gz
      exception_check
      tar -zxvf /tmp/inotify-tools-3.14.tar.gz
      exception_check
      cd /tmp/inotify-tools-3.14
      exception_check
      ./configure
      exception_check
      make
      exception_check
      make install
      exception_check
    elif [ -e $DPKG_PATH ]; then
      apt-get install -y inotify-tools
      exception_check
    else
      echo "Can't install inotify-tools package"
      exit 0
    fi
  fi
}

function run::message_parse() {
    ORIGINAL_MESSAGE=$@
    if [ $(echo $ORIGINAL_MESSAGE | grep "$CHANGED_FILE_FILTER" | wc -l) -eq 0 ]; then
    LOG_MONTH=$(echo $ORIGINAL_MESSAGE | awk '{print $1}')
    LOG_DAY=$(echo $ORIGINAL_MESSAGE | awk '{print $2}')
    LOG_TIME=$(echo $ORIGINAL_MESSAGE | awk '{print $3}')
    NODE_NAME=$(echo $ORIGINAL_MESSAGE | awk '{print $4}')
    LOGIN_ID=$(echo $ORIGINAL_MESSAGE | awk '{print $5}' | sed "s/\://")
    USER_ID=$(echo $ORIGINAL_MESSAGE | awk '{print $6}')
    CONNECT_IP=$(echo $ORIGINAL_MESSAGE | awk '{print $7}')
    SHELL_PID=$(echo $ORIGINAL_MESSAGE | awk '{print $8}' | sed "s/\[//" | sed "s/\]//")
    EXCUTE_PATH=$(echo $ORIGINAL_MESSAGE | awk '{print $9}' | sed "s/\[//" | sed "s/\]//")
    RUN_RESULT=$(echo $ORIGINAL_MESSAGE | awk '{print $NF}' | sed "s/\[//" | sed "s/\]//")
    RUN_COMMAND=$(echo $ORIGINAL_MESSAGE | awk -F]: '{print $2}') 
    CHECK_EDITOR=$(echo $RUN_COMMAND | awk '{print $1}')
    else
    CHANGE_FILE_NAME=$(echo $ORIGINAL_MESSAGE | awk '{print $NF}')
    fi
}

function run() {
  CHANGE_FILE_STORE=/tmp/filediff.tmp
  while $INOTIFYWAIT_PATH -e modify $WBHE_LOG_FILE; do
    LAST_MESSAGE=$(tail -n1 $WBHE_LOG_FILE)
    run::message_parse $LAST_MESSAGE
    if [ $(echo $LAST_MESSAGE | grep "$CHANGED_FILE_FILTER" | wc -l) -eq 1 ]; then
      cat $CHANGE_FILE_NAME >>$CHANGE_FILE_STORE
      SEND_MESSAGE=""
    elif [ $(echo $CHECK_EDITOR | grep -E "^vi|^vim" | wc -l) -eq 1 ]; then
      CHECK_CHANGE_FILENAME=$(tail -n2 $WBHE_LOG_FILE | head -n 1 )
      if [ $(echo $CHECK_CHANGE_FILENAME | grep "$CHANGED_FILE_FILTER" | wc -l) -eq 1 ]; then
        run::message_parse $CHECK_CHANGE_FILENAME
        CHANGE_FILE_HASH=$(md5sum $CHANGE_FILE_NAME | awk '{print $1}')
        SEND_MESSAGE=$(echo $LOG_MONTH :: $LOG_DAY :: $LOG_TIME :: $NODE_NAME :: $LOGIN_ID :: $USER_ID :: $CONNECT_IP :: $SHELL_PID :: $EXCUTE_PATH :: $RUN_COMMAND :: $RUN_RESULT :: $CHANGE_FILE_HASH)
        #upload /tmp/$CHANGE_FILE_STORE with $CHANGE_FILE_HASH
        echo "" >$CHANGE_FILE_STORE
      fi
    else
      if [ $(echo $LAST_MESSAGE | grep "$MESSAGE_REPEAT_FILTER" | wc -l) -eq 0 ]; then
        SEND_MESSAGE=$(echo $LOG_MONTH :: $LOG_DAY :: $LOG_TIME :: $NODE_NAME :: $LOGIN_ID :: $USER_ID :: $CONNECT_IP :: $SHELL_PID :: $EXCUTE_PATH :: $RUN_COMMAND :: $RUN_RESULT ::)
      else
        SEND_MESSAGE=""
      fi
    fi

    if [[ $SEND_MESSAGE != "" ]]; then
      curl -X PUT $WBHE_SERVER_URL -H "cache-control: no-cache" -H "content-type: application/x-www-form-urlencoded" -H "x-api-key: $X_API_KEY" -d "log=$SEND_MESSAGE"  2> /dev/null
    fi
    unset LOG_MONTH LOG_DAY LOG_TIME NODE_NAME LOGIN_ID USER_ID CONNECT_IP SHELL_PID EXCUTE_PATH RUN_RESULT RUN_COMMAND CHANGE_FILE_NAME
  done
}


case "$COMMAND" in
run)
  check_tools
  #run daemon
  run &
  exception_check
  ;;
stop)
  stop
  ;;
update)
  update
  ;;
install)
  #bash_history_extend install
  curl -L https://raw.githubusercontent.com/jaekwon-park/bash_history_extend/master/Installer.sh -O /tmp/bhe_installer
  chmod +x /tmp/bhe_installer
  /tmp/bhe_installer -i
  ;;
delete)
  #bash_history_extend install
  curl -L https://raw.githubusercontent.com/jaekwon-park/bash_history_extend/master/Installer.sh -O /tmp/bhe_installer
  chmod +x /tmp/bhe_installer
  /tmp/bhe_installer -d
  ;;
set)
  ;;
*)
  Help_Command
  ;;
esac
